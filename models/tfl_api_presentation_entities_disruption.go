// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TflAPIPresentationEntitiesDisruption Represents a disruption to a route within the transport network.
// swagger:model Tfl.Api.Presentation.Entities.Disruption
type TflAPIPresentationEntitiesDisruption struct {

	// Gets or sets the additionaInfo of this disruption.
	AdditionalInfo string `json:"additionalInfo,omitempty"`

	// Gets or sets the routes affected by this disruption
	AffectedRoutes []*TflAPIPresentationEntitiesRouteSection `json:"affectedRoutes"`

	// Gets or sets the stops affected by this disruption
	AffectedStops []*TflAPIPresentationEntitiesStopPoint `json:"affectedStops"`

	// Gets or sets the category of this dispruption.
	// Enum: [Undefined RealTime PlannedWork Information Event Crowding StatusAlert]
	Category string `json:"category,omitempty"`

	// Gets or sets the description of the category.
	CategoryDescription string `json:"categoryDescription,omitempty"`

	// Text describing the closure type
	ClosureText string `json:"closureText,omitempty"`

	// Gets or sets the date/time when this disruption was created.
	// Format: date-time
	Created strfmt.DateTime `json:"created,omitempty"`

	// Gets or sets the description of this disruption.
	Description string `json:"description,omitempty"`

	// Gets or sets the date/time when this disruption was last updated.
	// Format: date-time
	LastUpdate strfmt.DateTime `json:"lastUpdate,omitempty"`

	// Gets or sets the summary of this disruption.
	Summary string `json:"summary,omitempty"`

	// Gets or sets the disruption type of this dispruption.
	Type string `json:"type,omitempty"`
}

// Validate validates this tfl Api presentation entities disruption
func (m *TflAPIPresentationEntitiesDisruption) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAffectedRoutes(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAffectedStops(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCategory(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCreated(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLastUpdate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TflAPIPresentationEntitiesDisruption) validateAffectedRoutes(formats strfmt.Registry) error {

	if swag.IsZero(m.AffectedRoutes) { // not required
		return nil
	}

	for i := 0; i < len(m.AffectedRoutes); i++ {
		if swag.IsZero(m.AffectedRoutes[i]) { // not required
			continue
		}

		if m.AffectedRoutes[i] != nil {
			if err := m.AffectedRoutes[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("affectedRoutes" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *TflAPIPresentationEntitiesDisruption) validateAffectedStops(formats strfmt.Registry) error {

	if swag.IsZero(m.AffectedStops) { // not required
		return nil
	}

	for i := 0; i < len(m.AffectedStops); i++ {
		if swag.IsZero(m.AffectedStops[i]) { // not required
			continue
		}

		if m.AffectedStops[i] != nil {
			if err := m.AffectedStops[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("affectedStops" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

var tflApiPresentationEntitiesDisruptionTypeCategoryPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Undefined","RealTime","PlannedWork","Information","Event","Crowding","StatusAlert"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		tflApiPresentationEntitiesDisruptionTypeCategoryPropEnum = append(tflApiPresentationEntitiesDisruptionTypeCategoryPropEnum, v)
	}
}

const (

	// TflAPIPresentationEntitiesDisruptionCategoryUndefined captures enum value "Undefined"
	TflAPIPresentationEntitiesDisruptionCategoryUndefined string = "Undefined"

	// TflAPIPresentationEntitiesDisruptionCategoryRealTime captures enum value "RealTime"
	TflAPIPresentationEntitiesDisruptionCategoryRealTime string = "RealTime"

	// TflAPIPresentationEntitiesDisruptionCategoryPlannedWork captures enum value "PlannedWork"
	TflAPIPresentationEntitiesDisruptionCategoryPlannedWork string = "PlannedWork"

	// TflAPIPresentationEntitiesDisruptionCategoryInformation captures enum value "Information"
	TflAPIPresentationEntitiesDisruptionCategoryInformation string = "Information"

	// TflAPIPresentationEntitiesDisruptionCategoryEvent captures enum value "Event"
	TflAPIPresentationEntitiesDisruptionCategoryEvent string = "Event"

	// TflAPIPresentationEntitiesDisruptionCategoryCrowding captures enum value "Crowding"
	TflAPIPresentationEntitiesDisruptionCategoryCrowding string = "Crowding"

	// TflAPIPresentationEntitiesDisruptionCategoryStatusAlert captures enum value "StatusAlert"
	TflAPIPresentationEntitiesDisruptionCategoryStatusAlert string = "StatusAlert"
)

// prop value enum
func (m *TflAPIPresentationEntitiesDisruption) validateCategoryEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, tflApiPresentationEntitiesDisruptionTypeCategoryPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *TflAPIPresentationEntitiesDisruption) validateCategory(formats strfmt.Registry) error {

	if swag.IsZero(m.Category) { // not required
		return nil
	}

	// value enum
	if err := m.validateCategoryEnum("category", "body", m.Category); err != nil {
		return err
	}

	return nil
}

func (m *TflAPIPresentationEntitiesDisruption) validateCreated(formats strfmt.Registry) error {

	if swag.IsZero(m.Created) { // not required
		return nil
	}

	if err := validate.FormatOf("created", "body", "date-time", m.Created.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *TflAPIPresentationEntitiesDisruption) validateLastUpdate(formats strfmt.Registry) error {

	if swag.IsZero(m.LastUpdate) { // not required
		return nil
	}

	if err := validate.FormatOf("lastUpdate", "body", "date-time", m.LastUpdate.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TflAPIPresentationEntitiesDisruption) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TflAPIPresentationEntitiesDisruption) UnmarshalBinary(b []byte) error {
	var res TflAPIPresentationEntitiesDisruption
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
