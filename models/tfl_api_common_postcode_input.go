// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TflAPICommonPostcodeInput tfl Api common postcode input
// swagger:model Tfl.Api.Common.PostcodeInput
type TflAPICommonPostcodeInput struct {

	// postcode
	// Pattern: ^(([gG][iI][rR] {0,}0[aA]{2})|((([a-pr-uwyzA-PR-UWYZ][a-hk-yA-HK-Y]?[0-9][0-9]?)|(([a-pr-uwyzA-PR-UWYZ][0-9][a-hjkstuwA-HJKSTUW])|([a-pr-uwyzA-PR-UWYZ][a-hk-yA-HK-Y][0-9][abehmnprv-yABEHMNPRV-Y]))) {0,}[0-9][abd-hjlnp-uw-zABD-HJLNP-UW-Z]{2}))$
	Postcode string `json:"postcode,omitempty"`
}

// Validate validates this tfl Api common postcode input
func (m *TflAPICommonPostcodeInput) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePostcode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TflAPICommonPostcodeInput) validatePostcode(formats strfmt.Registry) error {

	if swag.IsZero(m.Postcode) { // not required
		return nil
	}

	if err := validate.Pattern("postcode", "body", string(m.Postcode), `^(([gG][iI][rR] {0,}0[aA]{2})|((([a-pr-uwyzA-PR-UWYZ][a-hk-yA-HK-Y]?[0-9][0-9]?)|(([a-pr-uwyzA-PR-UWYZ][0-9][a-hjkstuwA-HJKSTUW])|([a-pr-uwyzA-PR-UWYZ][a-hk-yA-HK-Y][0-9][abehmnprv-yABEHMNPRV-Y]))) {0,}[0-9][abd-hjlnp-uw-zABD-HJLNP-UW-Z]{2}))$`); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TflAPICommonPostcodeInput) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TflAPICommonPostcodeInput) UnmarshalBinary(b []byte) error {
	var res TflAPICommonPostcodeInput
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
