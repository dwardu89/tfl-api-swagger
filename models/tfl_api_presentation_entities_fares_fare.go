// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TflAPIPresentationEntitiesFaresFare tfl Api presentation entities fares fare
// swagger:model Tfl.Api.Presentation.Entities.Fares.Fare
type TflAPIPresentationEntitiesFaresFare struct {

	// cap
	Cap float64 `json:"cap,omitempty"`

	// cost
	Cost string `json:"cost,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// id
	ID int32 `json:"id,omitempty"`

	// mode
	Mode string `json:"mode,omitempty"`

	// passenger type
	PassengerType string `json:"passengerType,omitempty"`

	// ticket time
	TicketTime string `json:"ticketTime,omitempty"`

	// ticket type
	TicketType string `json:"ticketType,omitempty"`

	// valid from
	// Format: date-time
	ValidFrom strfmt.DateTime `json:"validFrom,omitempty"`

	// valid until
	// Format: date-time
	ValidUntil strfmt.DateTime `json:"validUntil,omitempty"`

	// zone
	Zone string `json:"zone,omitempty"`
}

// Validate validates this tfl Api presentation entities fares fare
func (m *TflAPIPresentationEntitiesFaresFare) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateValidFrom(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateValidUntil(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TflAPIPresentationEntitiesFaresFare) validateValidFrom(formats strfmt.Registry) error {

	if swag.IsZero(m.ValidFrom) { // not required
		return nil
	}

	if err := validate.FormatOf("validFrom", "body", "date-time", m.ValidFrom.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *TflAPIPresentationEntitiesFaresFare) validateValidUntil(formats strfmt.Registry) error {

	if swag.IsZero(m.ValidUntil) { // not required
		return nil
	}

	if err := validate.FormatOf("validUntil", "body", "date-time", m.ValidUntil.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TflAPIPresentationEntitiesFaresFare) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TflAPIPresentationEntitiesFaresFare) UnmarshalBinary(b []byte) error {
	var res TflAPIPresentationEntitiesFaresFare
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
