// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// TflAPIPresentationEntitiesFaresFareBounds tfl Api presentation entities fares fare bounds
// swagger:model Tfl.Api.Presentation.Entities.Fares.FareBounds
type TflAPIPresentationEntitiesFaresFareBounds struct {

	// description
	Description string `json:"description,omitempty"`

	// display name
	DisplayName string `json:"displayName,omitempty"`

	// display order
	DisplayOrder int32 `json:"displayOrder,omitempty"`

	// from
	From string `json:"from,omitempty"`

	// id
	ID int32 `json:"id,omitempty"`

	// is popular fare
	IsPopularFare bool `json:"isPopularFare,omitempty"`

	// is popular travel card
	IsPopularTravelCard bool `json:"isPopularTravelCard,omitempty"`

	// is tour
	IsTour bool `json:"isTour,omitempty"`

	// messages
	Messages []*TflAPIPresentationEntitiesMessage `json:"messages"`

	// operator
	Operator string `json:"operator,omitempty"`

	// route code
	RouteCode string `json:"routeCode,omitempty"`

	// to
	To string `json:"to,omitempty"`

	// via
	Via string `json:"via,omitempty"`
}

// Validate validates this tfl Api presentation entities fares fare bounds
func (m *TflAPIPresentationEntitiesFaresFareBounds) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMessages(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TflAPIPresentationEntitiesFaresFareBounds) validateMessages(formats strfmt.Registry) error {

	if swag.IsZero(m.Messages) { // not required
		return nil
	}

	for i := 0; i < len(m.Messages); i++ {
		if swag.IsZero(m.Messages[i]) { // not required
			continue
		}

		if m.Messages[i] != nil {
			if err := m.Messages[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("messages" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *TflAPIPresentationEntitiesFaresFareBounds) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TflAPIPresentationEntitiesFaresFareBounds) UnmarshalBinary(b []byte) error {
	var res TflAPIPresentationEntitiesFaresFareBounds
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
