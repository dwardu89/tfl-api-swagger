// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TflAPIPresentationEntitiesJourneyPlannerPlannedWork tfl Api presentation entities journey planner planned work
// swagger:model Tfl.Api.Presentation.Entities.JourneyPlanner.PlannedWork
type TflAPIPresentationEntitiesJourneyPlannerPlannedWork struct {

	// created date time
	// Format: date-time
	CreatedDateTime strfmt.DateTime `json:"createdDateTime,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// last update date time
	// Format: date-time
	LastUpdateDateTime strfmt.DateTime `json:"lastUpdateDateTime,omitempty"`
}

// Validate validates this tfl Api presentation entities journey planner planned work
func (m *TflAPIPresentationEntitiesJourneyPlannerPlannedWork) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreatedDateTime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLastUpdateDateTime(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TflAPIPresentationEntitiesJourneyPlannerPlannedWork) validateCreatedDateTime(formats strfmt.Registry) error {

	if swag.IsZero(m.CreatedDateTime) { // not required
		return nil
	}

	if err := validate.FormatOf("createdDateTime", "body", "date-time", m.CreatedDateTime.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *TflAPIPresentationEntitiesJourneyPlannerPlannedWork) validateLastUpdateDateTime(formats strfmt.Registry) error {

	if swag.IsZero(m.LastUpdateDateTime) { // not required
		return nil
	}

	if err := validate.FormatOf("lastUpdateDateTime", "body", "date-time", m.LastUpdateDateTime.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TflAPIPresentationEntitiesJourneyPlannerPlannedWork) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TflAPIPresentationEntitiesJourneyPlannerPlannedWork) UnmarshalBinary(b []byte) error {
	var res TflAPIPresentationEntitiesJourneyPlannerPlannedWork
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
