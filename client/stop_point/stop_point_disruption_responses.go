// Code generated by go-swagger; DO NOT EDIT.

package stop_point

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/dwardu89/tfl-api-swagger/models"
)

// StopPointDisruptionReader is a Reader for the StopPointDisruption structure.
type StopPointDisruptionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StopPointDisruptionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStopPointDisruptionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewStopPointDisruptionOK creates a StopPointDisruptionOK with default headers values
func NewStopPointDisruptionOK() *StopPointDisruptionOK {
	return &StopPointDisruptionOK{}
}

/*StopPointDisruptionOK handles this case with default header values.

OK
*/
type StopPointDisruptionOK struct {
	Payload []*models.TflAPIPresentationEntitiesDisruptedPoint
}

func (o *StopPointDisruptionOK) Error() string {
	return fmt.Sprintf("[GET /StopPoint/{ids}/Disruption][%d] stopPointDisruptionOK  %+v", 200, o.Payload)
}

func (o *StopPointDisruptionOK) GetPayload() []*models.TflAPIPresentationEntitiesDisruptedPoint {
	return o.Payload
}

func (o *StopPointDisruptionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
