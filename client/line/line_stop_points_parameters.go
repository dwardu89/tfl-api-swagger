// Code generated by go-swagger; DO NOT EDIT.

package line

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewLineStopPointsParams creates a new LineStopPointsParams object
// with the default values initialized.
func NewLineStopPointsParams() *LineStopPointsParams {
	var ()
	return &LineStopPointsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewLineStopPointsParamsWithTimeout creates a new LineStopPointsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewLineStopPointsParamsWithTimeout(timeout time.Duration) *LineStopPointsParams {
	var ()
	return &LineStopPointsParams{

		timeout: timeout,
	}
}

// NewLineStopPointsParamsWithContext creates a new LineStopPointsParams object
// with the default values initialized, and the ability to set a context for a request
func NewLineStopPointsParamsWithContext(ctx context.Context) *LineStopPointsParams {
	var ()
	return &LineStopPointsParams{

		Context: ctx,
	}
}

// NewLineStopPointsParamsWithHTTPClient creates a new LineStopPointsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewLineStopPointsParamsWithHTTPClient(client *http.Client) *LineStopPointsParams {
	var ()
	return &LineStopPointsParams{
		HTTPClient: client,
	}
}

/*LineStopPointsParams contains all the parameters to send to the API endpoint
for the line stop points operation typically these are written to a http.Request
*/
type LineStopPointsParams struct {

	/*ID
	  A single line id e.g. victoria

	*/
	ID string
	/*TflOperatedNationalRailStationsOnly
	  If the national-rail line is requested, this flag will filter the national rail stations so that only those operated by TfL are returned

	*/
	TflOperatedNationalRailStationsOnly *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the line stop points params
func (o *LineStopPointsParams) WithTimeout(timeout time.Duration) *LineStopPointsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the line stop points params
func (o *LineStopPointsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the line stop points params
func (o *LineStopPointsParams) WithContext(ctx context.Context) *LineStopPointsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the line stop points params
func (o *LineStopPointsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the line stop points params
func (o *LineStopPointsParams) WithHTTPClient(client *http.Client) *LineStopPointsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the line stop points params
func (o *LineStopPointsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the line stop points params
func (o *LineStopPointsParams) WithID(id string) *LineStopPointsParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the line stop points params
func (o *LineStopPointsParams) SetID(id string) {
	o.ID = id
}

// WithTflOperatedNationalRailStationsOnly adds the tflOperatedNationalRailStationsOnly to the line stop points params
func (o *LineStopPointsParams) WithTflOperatedNationalRailStationsOnly(tflOperatedNationalRailStationsOnly *bool) *LineStopPointsParams {
	o.SetTflOperatedNationalRailStationsOnly(tflOperatedNationalRailStationsOnly)
	return o
}

// SetTflOperatedNationalRailStationsOnly adds the tflOperatedNationalRailStationsOnly to the line stop points params
func (o *LineStopPointsParams) SetTflOperatedNationalRailStationsOnly(tflOperatedNationalRailStationsOnly *bool) {
	o.TflOperatedNationalRailStationsOnly = tflOperatedNationalRailStationsOnly
}

// WriteToRequest writes these params to a swagger request
func (o *LineStopPointsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if o.TflOperatedNationalRailStationsOnly != nil {

		// query param tflOperatedNationalRailStationsOnly
		var qrTflOperatedNationalRailStationsOnly bool
		if o.TflOperatedNationalRailStationsOnly != nil {
			qrTflOperatedNationalRailStationsOnly = *o.TflOperatedNationalRailStationsOnly
		}
		qTflOperatedNationalRailStationsOnly := swag.FormatBool(qrTflOperatedNationalRailStationsOnly)
		if qTflOperatedNationalRailStationsOnly != "" {
			if err := r.SetQueryParam("tflOperatedNationalRailStationsOnly", qTflOperatedNationalRailStationsOnly); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
